name: Patch release

on:
  workflow_dispatch:

permissions:
  contents: write
  packages:  write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: |
          latest_tag=$(git tag --list --sort=-v:refname | head -n1)
          echo "latest=$latest_tag" >> $GITHUB_OUTPUT

      - name: Generate tags
        id: prerelease
        run: |
          base_version=$(echo "${{ steps.get_tag.outputs.latest }}" | sed 's/-.*//')
          prerelease_base="${base_version}-rc"
          existing=$(git tag --list | grep "${prerelease_base}.*" | wc -l)
          IFS='.' read -r major minor patch <<< "$(echo "$base_version" | sed 's/^v//')" 
          
          if [[ $existing -eq 0 ]]; then
            new_tag="v$major.$minor.$((patch+1))"
            pre_release_tag="v$major.$minor.$((patch+2))-rc.0"
          else
            new_tag="${base_version}"
            pre_release_tag="v$major.$minor.$((patch+1))-rc.0"
          fi
          
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
          echo "pre_release_tag=$pre_release_tag" >> $GITHUB_OUTPUT

       # Enables the runner to emulate different architectures
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Creates a builder instance capable of multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate image metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha,enable=false
            type=raw,value=latest
            type=raw,value=latest-rc
            type=raw,value=${{ steps.prerelease.outputs.new_tag }}
            type=raw,value=${{ steps.prerelease.outputs.pre_release_tag }}

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push docker image
        uses: docker/build-push-action@v5
        with:
          build-args: VERSION=${{ steps.prerelease.outputs.new_tag }}
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max,image-manifest=true

      - name: Create stable tag
        run: |
          git tag "${{ steps.prerelease.outputs.new_tag }}"
          git push origin "${{ steps.prerelease.outputs.new_tag }}"

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.prerelease.outputs.new_tag }}
          prerelease: false

      - name: Create rc tag
        run: |
          git tag "${{ steps.prerelease.outputs.pre_release_tag }}"
          git push origin "${{ steps.prerelease.outputs.pre_release_tag }}"

      - name: Create pre-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.prerelease.outputs.pre_release_tag }}
          prerelease: true